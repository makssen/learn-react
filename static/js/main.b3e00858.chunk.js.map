{"version":3,"sources":["User.jsx","UserList.jsx","App.js","reportWebVitals.js","index.js"],"names":["User","props","name","includes","length","slice","toLowerCase","split","reverse","join","className","UserList","id","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAcMA,EAAO,SAACC,GAEV,OACI,mCACMA,EAAMC,KAAKC,SAAS,KAAO,mEAAiCF,EAAMC,QAChED,EAAMC,KAAKE,OAAS,EAAI,iDAAeH,EAAMC,KAAKG,MAAM,EAAG,GAAnC,SACpBJ,EAAMC,KAAKI,gBAAkBL,EAAMC,KAAKI,cAAcC,MAAM,IAAIC,UAAUC,KAAK,IAC3E,qBAAIC,UAAU,mBAAd,4BAA4CT,EAAMC,QAAa,iDAAeD,EAAMC,WCTtGS,EAAW,WAYb,OACI,6BAXU,CACV,CAAEC,GAAI,QAASV,KAAM,QACrB,CAAEU,GAAI,QAASV,KAAM,QACrB,CAAEU,GAAI,QAASV,KAAM,UACrB,CAAEU,GAAI,QAASV,KAAM,WACrB,CAAEU,GAAI,QAASV,KAAM,SACrB,CAAEU,GAAI,QAASV,KAAM,aACrB,CAAEU,GAAI,QAASV,KAAM,SAKVW,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAoBZ,KAAMY,EAAKZ,MAApBY,EAAKF,UCbhCG,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b3e00858.chunk.js","sourcesContent":["/* Используя массив пользователей и компоненты из предыдущего задания, реализуйте \r\nвнутри компонента User следующую функциональность:\r\n\r\nЕсли в name содержится буква `e`, то текст должен быть следующим: `It’s Premium User! Welcome, ${name}!`\r\nЕсли name больше 5 букв, то обрезать имя до 5 букв, добавляя три точки к концу имени. Пример: Vladislav => \r\nIt’s user Vladi...\r\nЕсли имя - палиндром (без учета регистра), на элемент должен примениться класс `name--highlighted`, \r\nкоторый применяет красный цвет к тексту элемента    */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    return (\r\n        <>\r\n            { props.name.includes('e') ? <li>It’s Premium User! Welcome, {props.name}</li> :\r\n                props.name.length > 5 ? <li>It’s user {props.name.slice(0, 5)}...</li> :\r\n                    props.name.toLowerCase() === props.name.toLowerCase().split('').reverse().join('') ?\r\n                        <li className=\"name-highlighted\">It’s user {props.name}</li> : <li>It’s user {props.name}</li>\r\n            }\r\n        </>\r\n        /*         <>\r\n                    {props.children}\r\n                </> */\r\n    );\r\n}\r\n\r\nexport { User };","/* Создайте компонент UserList, а также компонент User, который будет принимать в props’ах name \r\n(имя пользователя). И рендерить строку в span вида `It’s user ${name}`\r\nДалее Вам необходимо в компоненте UserList пройтись по массиву пользователей: \r\n[{id: \"uniq1\", name:\"Paul\"}, {id: \"uniq2\", name:\"Mary\"}, {id: \"uniq3\", name:\"Viktor\"}, \r\n{id: \"uniq4\", name:\"Suzanna\"}, {id: \"uniq5\", name:\"Peter\"}, {id: \"uniq6\", name:\"Vladislav\"}, \r\n{id: \"uniq7\", name:\"Anna\"}]\r\nи отрендерить каждый элемент массива с помощью компонента User, пробросив ему нужное поле в качестве props */\r\n\r\nimport React from 'react';\r\nimport { User } from './User';\r\n/* import { ComposebaleUser } from './ComposebaleUser'; */\r\n\r\nconst UserList = () => {\r\n\r\n    const users = [\r\n        { id: \"uniq1\", name: \"Paul\" },\r\n        { id: \"uniq2\", name: \"Mary\" },\r\n        { id: \"uniq3\", name: \"Viktor\" },\r\n        { id: \"uniq4\", name: \"Suzanna\" },\r\n        { id: \"uniq5\", name: \"Peter\" },\r\n        { id: \"uniq6\", name: \"Vladislav\" },\r\n        { id: \"uniq7\", name: \"Anna\" }\r\n    ];\r\n\r\n    return (\r\n        <ul>\r\n            {users.map(item => <User key={item.id} name={item.name} />)}\r\n            {/* <User><ComposebaleUser>Viktor</ComposebaleUser></User> */}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport { UserList };","import './App.css';\nimport React from 'react';\n\nimport { UserList } from './UserList';\n\nconst App = () => {\n  return (\n    <>\n      <UserList />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}